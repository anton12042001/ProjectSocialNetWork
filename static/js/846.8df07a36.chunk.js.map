{"version":3,"file":"static/js/846.8df07a36.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCYjN,EATmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,gBAAKC,UAAWC,EAAiB,IAAMA,EAAvC,UACH,UAAC,KAAD,CAASC,GAAIJ,EAAb,WACI,gBAAKK,IAAKN,EAAMO,UAAWC,IAAI,KADnC,IACyCR,EAAMS,WCGvD,EARgB,SAACT,GACb,OACI,gBAAKG,UAAWC,EAAhB,SACKJ,EAAMU,W,oBC2BnB,EA5ByB,SAACV,GACtB,OAOIW,EAAAA,EAAAA,MANAC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aAEIC,EAJR,EAGIC,UACID,QAEJE,EANJ,EAMIA,MAUJ,OACI,kBAAMC,SAAUJ,GARH,SAACK,GACdC,MAAMC,KAAKC,UAAUH,IACrBF,IACAhB,EAAMsB,cAAcJ,MAKpB,WACY,6BAAUK,YAAa,8GAA6BX,EAAS,kBAErE,0BACI,kBAAOY,KAAM,SAAUC,UAAWX,UCYlD,EAhCgB,SAACd,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYxB,UAAWwB,EAAExB,UAAWE,KAAMsB,EAAEtB,KAAMP,GAAI6B,EAAE7B,IAAS6B,EAAE7B,OAC3G8B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAEhC,OASlF,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKwB,KAEL,gBAAKzB,UAAWC,EAAhB,SACK4B,KAEL,qKAEA,SAAC,EAAD,CAAkBV,cAfN,SAACa,GACjBnC,EAAMoC,WAAWD,U,oBCUzB,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KApBkB,SAACZ,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBY,OAAQb,EAAMc,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHL,WAAY,SAACD,GAETM,GAASC,EAAAA,EAAAA,GAAkBP,EAAYA,mBAU/CQ,EAAAA,EAFJ,CAGEC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsFormSheme/DialogsFormSheme.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Qs-Jr\",\"dialogsItems\":\"Dialogs_dialogsItems__kUnPF\",\"active\":\"Dialogs_active__z8TPH\",\"dialog\":\"Dialogs_dialog__dkbyp\",\"messages\":\"Dialogs_messages__0juDc\",\"message\":\"Dialogs_message__-DCdM\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={classes.dialog + ' ' + classes.active}>\r\n        <NavLink to={path}>\r\n            <img src={props.avatarUrl} alt=\"\"/> {props.name}\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Message;","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst DialogsFormSheme = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {\r\n            isValid,\r\n        },\r\n        reset,\r\n    } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n        alert(JSON.stringify(data))\r\n        reset()\r\n        props.onAddMessages(data)\r\n        debugger\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} >\r\n                    <textarea placeholder={\"Напишите сообщение...\"} {...register(\"sendMessage\")}\r\n                    />\r\n            <div >\r\n                <input type={\"submit\"} disabled={!isValid} />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DialogsFormSheme;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogsFormSheme from \"./DialogsFormSheme/DialogsFormSheme\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem avatarUrl={d.avatarUrl} name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessagesElement = React.createRef();\r\n\r\n\r\n    let onAddMessages = (sendMessage) => {\r\n        props.addMessage(sendMessage)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <div>Показать больше диалогов</div>\r\n\r\n            <DialogsFormSheme onAddMessages={onAddMessages}/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessagesAction} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (sendMessage) => {\r\n            debugger\r\n            dispatch(addMessagesAction(sendMessage.sendMessage))\r\n        },\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect,\r\n)(Dialogs);"],"names":["props","path","id","className","classes","to","src","avatarUrl","alt","name","message","useForm","register","handleSubmit","isValid","formState","reset","onSubmit","data","alert","JSON","stringify","onAddMessages","placeholder","type","disabled","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","sendMessage","addMessage","compose","connect","isAuth","auth","dispatch","addMessagesAction","WithAuthRedirect","Dialogs"],"sourceRoot":""}